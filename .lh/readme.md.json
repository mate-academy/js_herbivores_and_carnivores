{
    "sourceFile": "readme.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1710171352422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1710171358703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n # Herbivores and Сarnivores\n-Nature is well suited to reflect the principles of Object Oriented Programming.\n+<!-- Nature is well suited to reflect the principles of Object Oriented Programming.\n All instances of the `Animal` class must have properties `health` and a `name`.\n-Health is 100 by default.\n+Health is 100 by default. -->\n \n Create a `Herbivore` class.\n Herbivore has a method of `hide`, which changes the `hidden` property of the beast and helps to hide from carnivores.\n \n"
                },
                {
                    "date": 1710171873562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n Create a `Сarnivore` class.\n Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n \n-<!-- `Herbivore` and `Сarnivore` should extend an `Animal` class. -->\n+`Herbivore` and `Сarnivore` should extend an `Animal` class.\n \n All alive animals should be in the static `Animal.alive` array.\n If the health of the animal reaches 0, the beast dies and it should be removed from the static array `Animals.alive`.\n \n"
                },
                {
                    "date": 1710172409586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n Create a `Сarnivore` class.\n Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n \n-`Herbivore` and `Сarnivore` should extend an `Animal` class.\n+<!-- `Herbivore` and `Сarnivore` should extend an `Animal` class. -->\n \n All alive animals should be in the static `Animal.alive` array.\n If the health of the animal reaches 0, the beast dies and it should be removed from the static array `Animals.alive`.\n \n"
                },
                {
                    "date": 1710172953417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n All instances of the `Animal` class must have properties `health` and a `name`.\n Health is 100 by default. -->\n \n Create a `Herbivore` class.\n-Herbivore has a method of `hide`, which changes the `hidden` property of the beast and helps to hide from carnivores.\n+Herbivore  has a method of `hide`, which changes the `hidden`property of the beast and helps to hide from carnivores.\n \n Create a `Сarnivore` class.\n Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n \n"
                },
                {
                    "date": 1710172970433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+# Herbivores and Сarnivores\n+<!-- Nature is well suited to reflect the principles of Object Oriented Programming.\n+All instances of the `Animal` class must have properties `health` and a `name`.\n+Health is 100 by default. -->\n+\n+<!-- Create a `Herbivore` class.\n+Herbivore has a method of `hide`, which changes the `hidden` property of the beast and helps to hide from carnivores. -->\n+\n+Create a `Сarnivore` class.\n+Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n+\n+<!-- `Herbivore` and `Сarnivore` should extend an `Animal` class. -->\n+\n+All alive animals should be in the static `Animal.alive` array.\n+If the health of the animal reaches 0, the beast dies and it should be removed from the static array `Animals.alive`.\n+\n+Example:\n+```\n+const deer = new Herbivore('Bembi');\n+const panther = new Carnivore('Bagira');\n+const lion = new Carnivore('King');\n+const rabbit = new Herbivore('Max');\n+\n+Animal.alive === [\n+  {name: 'Bembi', health: 100, hidden: false},\n+  {name: 'Bagira', health: 100},\n+  {name: 'King', health: 100},\n+  {name: 'Max', health: 100, hidden: false},\n+];\n+\n+lion.bite(deer);\n+panther.bite(lion);\n+Animal.alive === [\n+  {name: 'Bembi', health: 50},\n+  {name: 'Bagira', health: 100},\n+  {name: 'King', health: 100},\n+  {name: 'Max', health: 100},\n+];\n+\n+panther.bite(deer);\n+rabbit.hide();\n+panther.bite(rabbit);\n+\n+Animal.alive === [\n+  {name: 'Bagira', health: 100},\n+  {name: 'King', health: 100},\n+  {name: 'Max', health: 100, hidden: true},\n+];\n+```\n+\n+**Read [the guideline](https://github.com/mate-academy/js_task-guideline/blob/master/README.md) before start**\n"
                },
                {
                    "date": 1710173584690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n \n <!-- Create a `Herbivore` class.\n Herbivore has a method of `hide`, which changes the `hidden` property of the beast and helps to hide from carnivores. -->\n \n-Create a `Сarnivore` class.\n-Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n+<!-- Create a `Сarnivore` class.\n+Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding. -->\n \n <!-- `Herbivore` and `Сarnivore` should extend an `Animal` class. -->\n \n All alive animals should be in the static `Animal.alive` array.\n@@ -48,55 +48,4 @@\n ];\n ```\n \n **Read [the guideline](https://github.com/mate-academy/js_task-guideline/blob/master/README.md) before start**\n-# Herbivores and Сarnivores\n-<!-- Nature is well suited to reflect the principles of Object Oriented Programming.\n-All instances of the `Animal` class must have properties `health` and a `name`.\n-Health is 100 by default. -->\n-\n-Create a `Herbivore` class.\n-Herbivore  has a method of `hide`, which changes the `hidden`property of the beast and helps to hide from carnivores.\n-\n-Create a `Сarnivore` class.\n-Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n-\n-<!-- `Herbivore` and `Сarnivore` should extend an `Animal` class. -->\n-\n-All alive animals should be in the static `Animal.alive` array.\n-If the health of the animal reaches 0, the beast dies and it should be removed from the static array `Animals.alive`.\n-\n-Example:\n-```\n-const deer = new Herbivore('Bembi');\n-const panther = new Carnivore('Bagira');\n-const lion = new Carnivore('King');\n-const rabbit = new Herbivore('Max');\n-\n-Animal.alive === [\n-  {name: 'Bembi', health: 100, hidden: false},\n-  {name: 'Bagira', health: 100},\n-  {name: 'King', health: 100},\n-  {name: 'Max', health: 100, hidden: false},\n-];\n-\n-lion.bite(deer);\n-panther.bite(lion);\n-Animal.alive === [\n-  {name: 'Bembi', health: 50},\n-  {name: 'Bagira', health: 100},\n-  {name: 'King', health: 100},\n-  {name: 'Max', health: 100},\n-];\n-\n-panther.bite(deer);\n-rabbit.hide();\n-panther.bite(rabbit);\n-\n-Animal.alive === [\n-  {name: 'Bagira', health: 100},\n-  {name: 'King', health: 100},\n-  {name: 'Max', health: 100, hidden: true},\n-];\n-```\n-\n-**Read [the guideline](https://github.com/mate-academy/js_task-guideline/blob/master/README.md) before start**\n"
                },
                {
                    "date": 1710176231223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n # Herbivores and Сarnivores\n-<!-- Nature is well suited to reflect the principles of Object Oriented Programming.\n+Nature is well suited to reflect the principles of Object Oriented Programming.\n All instances of the `Animal` class must have properties `health` and a `name`.\n Health is 100 by default. -->\n \n <!-- Create a `Herbivore` class.\n@@ -8,9 +8,9 @@\n \n <!-- Create a `Сarnivore` class.\n Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding. -->\n \n-<!-- `Herbivore` and `Сarnivore` should extend an `Animal` class. -->\n+<!-- `Herbivore` and `Сarnivore` should extend an `Animal` class.\n \n All alive animals should be in the static `Animal.alive` array.\n If the health of the animal reaches 0, the beast dies and it should be removed from the static array `Animals.alive`.\n \n"
                },
                {
                    "date": 1710176237041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,13 @@\n Nature is well suited to reflect the principles of Object Oriented Programming.\n All instances of the `Animal` class must have properties `health` and a `name`.\n Health is 100 by default. -->\n \n-<!-- Create a `Herbivore` class.\n-Herbivore has a method of `hide`, which changes the `hidden` property of the beast and helps to hide from carnivores. -->\n+Create a `Herbivore` class.\n+Herbivore has a method of `hide`, which changes the `hidden` property of the beast and helps to hide from carnivores.\n \n-<!-- Create a `Сarnivore` class.\n-Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding. -->\n+Create a `Сarnivore` class.\n+Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n \n <!-- `Herbivore` and `Сarnivore` should extend an `Animal` class.\n \n All alive animals should be in the static `Animal.alive` array.\n"
                },
                {
                    "date": 1710176250093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n Create a `Сarnivore` class.\n Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n \n-<!-- `Herbivore` and `Сarnivore` should extend an `Animal` class.\n+<!-- <!-- `Herbivore` and `Сarnivore` should extend an `Animal` class.\n \n All alive animals should be in the static `Animal.alive` array.\n If the health of the animal reaches 0, the beast dies and it should be removed from the static array `Animals.alive`.\n \n@@ -47,5 +47,5 @@\n   {name: 'Max', health: 100, hidden: true},\n ];\n ```\n \n-**Read [the guideline](https://github.com/mate-academy/js_task-guideline/blob/master/README.md) before start**\n+**Read [the guideline](https://github.com/mate-academy/js_task-guideline/blob/master/README.md) before start** -->\n"
                },
                {
                    "date": 1710176256511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n Create a `Сarnivore` class.\n Carnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n \n-<!-- <!-- `Herbivore` and `Сarnivore` should extend an `Animal` class.\n+`Herbivore` and `Сarnivore` should extend an `Animal` class.\n \n All alive animals should be in the static `Animal.alive` array.\n If the health of the animal reaches 0, the beast dies and it should be removed from the static array `Animals.alive`.\n \n@@ -47,5 +47,5 @@\n   {name: 'Max', health: 100, hidden: true},\n ];\n ```\n \n-**Read [the guideline](https://github.com/mate-academy/js_task-guideline/blob/master/README.md) before start** -->\n+**Read [the guideline](https://github.com/mate-academy/js_task-guideline/blob/master/README.md) before start**\n"
                }
            ],
            "date": 1710171352422,
            "name": "Commit-0",
            "content": "# Herbivores and Сarnivores\nNature is well suited to reflect the principles of Object Oriented Programming.\nAll instances of the `Animal` class must have properties `health` and a `name`.\nHealth is 100 by default.\n\nCreate a `Herbivore` class.\nHerbivore has a method of `hide`, which changes the `hidden` property of the beast and helps to hide from carnivores.\n\nCreate a `Сarnivore` class.\nCarnivore has a `bite` method, which takes a herbivore object and decreases the object's health by 50. The method does not work if it is another сarnivore, or the herbivore is currently hiding.\n\n<!-- `Herbivore` and `Сarnivore` should extend an `Animal` class. -->\n\nAll alive animals should be in the static `Animal.alive` array.\nIf the health of the animal reaches 0, the beast dies and it should be removed from the static array `Animals.alive`.\n\nExample:\n```\nconst deer = new Herbivore('Bembi');\nconst panther = new Carnivore('Bagira');\nconst lion = new Carnivore('King');\nconst rabbit = new Herbivore('Max');\n\nAnimal.alive === [\n  {name: 'Bembi', health: 100, hidden: false},\n  {name: 'Bagira', health: 100},\n  {name: 'King', health: 100},\n  {name: 'Max', health: 100, hidden: false},\n];\n\nlion.bite(deer);\npanther.bite(lion);\nAnimal.alive === [\n  {name: 'Bembi', health: 50},\n  {name: 'Bagira', health: 100},\n  {name: 'King', health: 100},\n  {name: 'Max', health: 100},\n];\n\npanther.bite(deer);\nrabbit.hide();\npanther.bite(rabbit);\n\nAnimal.alive === [\n  {name: 'Bagira', health: 100},\n  {name: 'King', health: 100},\n  {name: 'Max', health: 100, hidden: true},\n];\n```\n\n**Read [the guideline](https://github.com/mate-academy/js_task-guideline/blob/master/README.md) before start**\n"
        }
    ]
}